name: Isar release

on:
  push:
    tags:
      - "*"

jobs:
  build_binaries:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: libisar_android_arm64.so
            script: build_android.sh
          - os: ubuntu-latest
            artifact_name: libisar_android_armv7.so
            script: build_android.sh armv7
          - os: ubuntu-latest
            artifact_name: libisar_android_x64.so
            script: build_android.sh x64
          - os: macos-latest
            artifact_name: isar_ios.xcframework.zip
            script: build_ios.sh
          - os: ubuntu-20.04
            artifact_name: libisar_linux_x64.so
            script: build_linux.sh x64
          - os: macos-latest
            artifact_name: libisar_macos.dylib
            script: build_macos.sh
          - os: windows-latest
            artifact_name: isar_windows_x64.dll
            script: build_windows.sh x64
          - os: ubuntu-latest
            artifact_name: isar.wasm
            script: build_wasm.sh
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Build
        uses: ./.github/actions/prepare-build
      - name: Set Isar Version
        run: echo "ISAR_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Build binary
        run: bash tool/${{ matrix.script }}
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          tag: ${{ github.ref }}

  testlab:
    needs: build_binaries
    uses: ./.github/workflows/testlab.yaml
    secrets: inherit

  publish:
    name: Publish
    needs: testlab
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          running-workflow-name: "Publish"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Set Isar Version
        run: echo "ISAR_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Download Binaries
        run: sh tool/download_binaries.sh
      - name: Adjust Version
        run: find . -type f -exec sed -i "s/0.0.0-placeholder/${{ github.ref_name }}/g" {} +
      - name: pub.dev credentials
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_JSON }}' >> $HOME/.config/dart/pub-credentials.json
      - name: Publish isar plus
        run: |
          dart pub get
          dart pub publish --force
        working-directory: packages/isar_plus
      - name: Publish isar_plus_flutter_libs
        run: |
          flutter pub get
          flutter pub publish --force
        working-directory: packages/isar_plus_flutter_libs
